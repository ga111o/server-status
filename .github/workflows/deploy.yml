name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and tag Backend Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-backend:latest -f backend/Dockerfile backend/
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-backend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-backend:latest

      - name: Push Backend Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-backend:latest

  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and tag Frontend Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-frontend:latest -f frontend/Dockerfile frontend/
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-frontend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-frontend:latest

      - name: Push Frontend Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/server-status-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend]

    steps:
      - name: Install SSH and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client sshpass

      - name: Deploy to Server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_ID }}@${{ secrets.SSH_SERVER_IP }} << 'EOF'
            # Backend deployment
            BE_IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/server-status-backend:latest"
            sudo docker pull $BE_IMAGE
            sudo docker stop server-status-backend || true
            sudo docker rm server-status-backend || true
            sudo docker run -d --name server-status-backend -p 1910:1910 $BE_IMAGE

            # Frontend deployment
            FE_IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/server-status-frontend:latest"
            sudo docker pull $FE_IMAGE
            sudo docker stop server-status-frontend || true
            sudo docker rm server-status-frontend || true
            sudo docker run -d --name server-status-frontend -p 1232:1232 $FE_IMAGE

            # Cleanup
            sudo docker system prune -af
          EOF
